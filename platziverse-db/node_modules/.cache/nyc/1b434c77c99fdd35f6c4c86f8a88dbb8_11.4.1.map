{"version":3,"sources":["agent-tests.js"],"names":["test","require","proxyquire","config","logging","MetricStub","belongsTo","AgentStub","db","beforeEach","agentStub","hasMany","setupDatabase","t","truthy","Agent"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAIE,SAAS;AACXC,aAAS,YAAY,CAAE;AADZ,CAAb;AAGA,IAAIC,aAAa;AACbC,eAAW,YAAU,CAAE;AADV,CAAjB;AAGA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEAR,KAAKS,UAAL,CAAgB,YAAY;AACxBC,gBAAY;AACRC,iBAAS,YAAU,CAAE;AADb,KAAZ;AAGF,UAAMC,gBAAgBV,WAAW,KAAX,EAAmB;AACrC,0BAAkB,MAAKK,SADc;AAErC,2BAAmB,MAAKF;AAFa,KAAnB,CAAtB;AAIAG,SAAK,MAAMI,cAAcT,MAAd,CAAX;AACD,CATD;;AAWAH,KAAK,cAAL,EAAqBa,KAAK;AAAA;;AACxBA,MAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmB,4BAAnB;AACD,CAFD","file":"agent-tests.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst proxyquire = require('proxyquire')\nlet config = {\n  logging: function () {}\n}\nlet MetricStub = {\n    belongsTo: function(){}\n}\nlet AgentStub = null\nlet db = null\n\ntest.beforeEach(async () => {\n    agentStub = {\n        hasMany: function(){}\n    }\n  const setupDatabase = proxyquire('../', Â {\n      './models/agent': ()=> AgentStub,\n      './models/metric': ()=> MetricStub\n  })\n  db = await setupDatabase(config)\n})\n\ntest('make it pass', t => {\n  t.truthy(db.Agent, 'Agent service should exist')\n})\n"]}